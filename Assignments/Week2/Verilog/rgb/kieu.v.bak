module haha (clk, x,in_i, out, temp1, temp2, temp3, state, i, donee, resetD, resetM1, resetM2, so_chia, o, in_sochia);
output [31:0] in_sochia;
output [31:0] so_chia;
output [31:0] o;
output donee, resetD, resetM1, resetM2;
output [6:0] i;
output [31:0] temp1, temp2, temp3;
output [2:0] state;
input [31:0] x;
input clk;
input [6:0] in_i;
output [31:0] out;

wire [2:0] state;
wire resetD;
wire donee, w;
reg[6:0] i;


//state_machine
wire w1, w2, resetM1, resetM2;
state_machine sm_inst (clk, so_chia, w1, w2, donee, state, resetD, resetM1, resetM2);


always @ (posedge clk) begin
if (state == 3'd1)
   i = in_i -1'b1;
	else
	i = i;
	end
//div
reg [31:0] so_chia;

wire [31:0] in_sochia;

wire [31:0] temp1;
chia  chia_hiohi(clk, 32'b01000001010101100000000000000000, o, temp1, donee, resetD2);


wire [31:0] o;
wire [2:0] count;

wire [3:0] out_tb;
converter bbv(so_chia, o, out_tb, count);

always @(posedge clk) begin
   so_chia = in_sochia;
end

	assign in_sochia = (state == 3'b1) ?  (i - 3'b1) : in_i;
//mul1
wire [31:0] temp2, muul;

mulFP khkhk (clk, sum, temp1 , temp2, muul, w1, resetM1);
//mul2
wire [31:0] muul2;
wire [31:0] temp3;
mulFP khkhkdf (clk, x, temp2 , temp3, muul2, w2, resetM2);
//add
wire [31:0] sumAll;
wire [31:0] temp4;
part3_addition p3a (32'b01000001010101100000000000000000, temp3, sumAll);
wire [31:0] sum;
assign sum = (state == 3'd5) ? (sumAll + 1'b1) : sum;
assign out = (state == 3'd7) ? sum : 31'b0;

 
endmodule